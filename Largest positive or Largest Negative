The program must accept N integers as the input. The program must print the output based on the
following conditions.
-If the count of positive integers is greater than or equal to the count of negative integers then print
the largest positive integer.
-If the count of negative integers is greater than the count of positive integers then print the largest
negative integer as the output.
-If there is no positive integer and no negative integer then print -1 as the output.
Boundary Condition(s):
1 <= N <= 100
-10^8 <= Each integer value <= 10^8
Input Format:
The first line contains the value of N.
The second line contains N integers separated by space(s).
Output Format:
The first line contains either the largest positive integer or the largest negative integer or -1.
Example Input/Output 1:
Input:
7
17 -9 15 -5 -20 19 4
Output:
19
Explanation:
The count of positive integers is 4.
The count of negative integers is 3.
Here the count of positive integers is greater than the count of negative integers.
So the largest positive integer 19 is printed as the output.
Example Input/Output 2:
Input:
10
-72 -38 -99 65 -92 95 -59 -24 93 22
Output:
-24
Example Input/Output 3:
Input:
4
0 0 0 0
Output:
-1





Code : 

import java.util.*;
public class Hello {

    public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		long[] arr=new long[n];
		int pos=0,neg=0;
		for(int i=0;i<n;i++)
		{
		    arr[i]=sc.nextLong();
		    if(arr[i]<0)
		    {
		        neg++;
		    }
		    else if(arr[i]!=0)
		    {
		        pos++;
		    }
		}
		Arrays.sort(arr);
		if(pos==0 && neg==0)
		{
		    System.out.println("-1");
		    return;
		}
		if(pos>=neg)
		{
		    System.out.println(arr[n-1]);
		}
		else if(neg>pos)
		{
		    for(int i=n-1;i>=0;i--)
		    {
		        if(arr[i]<0)
		        {
		            System.out.println(arr[i]);
		            break;
		        }
		    }
		}
		else
		{
		    System.out.println("-1");
		}

	}
}
